/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Logica.ContPropuesta;
import Logica.ContUsuario;
import Logica.dtFecha;
import Logica.dtPropuesta;
import Logica.utilidades;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;

/**
 *
 * @author nicolasgutierrez
 */
public class Alta_de_Propuesta extends javax.swing.JInternalFrame {

    /**
     * Creates new form Alta_de_Propuesta
     */
    private ContUsuario ICU = ContUsuario.getInstance();
    private ContPropuesta ICP = ContPropuesta.getInstance();
    private utilidades util = utilidades.getInstance();
    String imagenRuta = null;
    JFileChooser navegadorArchivos = new JFileChooser();
    
    private String rearmarFecha(String f) {
        String fecha = null;
        String[] a = f.split("/");
        fecha = a[2] + "/" + a[1] + "/" + a[0];
        return fecha;
    }
    
    public Alta_de_Propuesta() {
        initComponents();
        jT_cat.setModel((DefaultTreeModel) ICP.modeloJT3Categorias());
        this.setSize(850, 600);
        String imagenRuta = null;
        String fecha = (String) util.getFecha().getFecha();
        Date min = new Date(rearmarFecha((String) util.getFechaInc(fecha, null, 1)));
        Date max = new Date("2020/12/31");
        jdc_fecha.getDateEditor().setEnabled(false);
        jdc_fecha.setMaxSelectableDate(max);
        jdc_fecha.setMinSelectableDate(min);
        jLabel14.setText("Proponentes");
        jLabel1.setText("Proponente");
        jLabel2.setText("Tipo de Espectaculo");
        jLabel4.setText("Titulo");
        jLabel7.setText("Fecha realizacion");
        jLabel5.setText("Descripcion");
        jLabel6.setText("Lugar");
        jLabel13.setText("Retornos posibles");
        cbporcentaje.setText("Porcentaje");
        cbentradas.setText("Entrada");
        jLabel16.setText("Monto requerido");
        jLabel11.setText("Costo entrada");
        jLabel12.setText("Imagen");
        btnexplorar.setText("Explorar");
        btndardealta.setText("Dar de Alta");
        btncancelar.setText("Cancelar");
        ICP.propAutomaticas();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollBar1 = new javax.swing.JScrollBar();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jT_cat = new javax.swing.JTree();
        txtbuscar = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        btndardealta = new javax.swing.JButton();
        btncancelar = new javax.swing.JButton();
        labelimage = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnexplorar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtdescripcion = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jdc_fecha = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        txttipoespectaculo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtproponente1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txttitulo1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtcostoentrada = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtlugar = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cbporcentaje = new javax.swing.JCheckBox();
        cbentradas = new javax.swing.JCheckBox();
        jLabel16 = new javax.swing.JLabel();
        txtmontorec = new javax.swing.JTextField();

        jLabel3.setText("Tipo de espectaculo");

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Nickname"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jT_cat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jT_catMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(jT_cat);

        txtbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbuscarActionPerformed(evt);
            }
        });
        txtbuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbuscarKeyPressed(evt);
            }
        });

        jLabel14.setText("Proponentes");

        btndardealta.setText("Dar de alta");
        btndardealta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndardealtaActionPerformed(evt);
            }
        });

        btncancelar.setText("Cancelar");
        btncancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelarActionPerformed(evt);
            }
        });

        jLabel12.setText("Imagen");

        btnexplorar.setText("Explorar");
        btnexplorar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexplorarActionPerformed(evt);
            }
        });

        txtdescripcion.setColumns(20);
        txtdescripcion.setRows(5);
        jScrollPane1.setViewportView(txtdescripcion);

        jLabel5.setText(" Descripcion");

        jLabel7.setText("Fecha prevista");

        txttipoespectaculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttipoespectaculoActionPerformed(evt);
            }
        });

        jLabel2.setText("Tipo de espectaculo");

        jLabel1.setText("Proponente");

        txtproponente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtproponente1ActionPerformed(evt);
            }
        });

        jLabel4.setText(" Titulo");

        txttitulo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttitulo1ActionPerformed(evt);
            }
        });

        jLabel11.setText("Costo entrada");

        txtcostoentrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcostoentradaActionPerformed(evt);
            }
        });

        jLabel6.setText(" Lugar");

        txtlugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtlugarActionPerformed(evt);
            }
        });

        jLabel13.setText(" Retornos posibles");

        cbporcentaje.setText("Porcentaje");

        cbentradas.setText("Entrada");

        jLabel16.setText("Monto requerido");

        txtmontorec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmontorecActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtproponente1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txttitulo1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtcostoentrada, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtlugar, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(cbporcentaje)
                    .addComponent(cbentradas)
                    .addComponent(jLabel16))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txttipoespectaculo, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jdc_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txtmontorec, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel12)
                .addGap(28, 28, 28)
                .addComponent(btnexplorar))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(labelimage, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(460, 460, 460)
                .addComponent(btndardealta, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(640, 640, 640)
                .addComponent(btncancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(5, 5, 5)
                        .addComponent(txtproponente1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel4)
                        .addGap(5, 5, 5)
                        .addComponent(txttitulo1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel11)
                        .addGap(5, 5, 5)
                        .addComponent(txtcostoentrada, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel6)
                        .addGap(5, 5, 5)
                        .addComponent(txtlugar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel13)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbporcentaje)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(cbentradas)))
                        .addGap(7, 7, 7)
                        .addComponent(jLabel16))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(5, 5, 5)
                        .addComponent(txttipoespectaculo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel7)
                        .addGap(5, 5, 5)
                        .addComponent(jdc_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel5)
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(5, 5, 5)
                        .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5)
                .addComponent(txtmontorec, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel12))
                    .addComponent(btnexplorar))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelimage, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(btndardealta)))
                .addGap(5, 5, 5)
                .addComponent(btncancelar))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txttipoespectaculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttipoespectaculoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttipoespectaculoActionPerformed

    private void txtproponente1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtproponente1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtproponente1ActionPerformed

    private void txtlugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtlugarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtlugarActionPerformed

    private void txttitulo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttitulo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttitulo1ActionPerformed

    private void txtcostoentradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcostoentradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcostoentradaActionPerformed

    private void btnexplorarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexplorarActionPerformed
        // TODO add your handling code here:
        selecImagen();
    }//GEN-LAST:event_btnexplorarActionPerformed

    private void btndardealtaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndardealtaActionPerformed
        // TODO add your handling code here:
        altaProp();

    }//GEN-LAST:event_btndardealtaActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int row = jTable1.rowAtPoint(evt.getPoint());
        int col = jTable1.columnAtPoint(evt.getPoint());
        
        txtproponente1.setText((String) jTable1.getValueAt(row, col));
        

    }//GEN-LAST:event_jTable1MouseClicked

    private void txtbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbuscarActionPerformed

    private void txtbuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscarKeyPressed
        // TODO add your handling code here:
        List<String> proponentes = ICU.listarProponentes(txtbuscar.getText());
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0);
        for (int i = 0; i < proponentes.size(); i++) {
            String p = proponentes.get(i);
            Object[] dat = {p};
            modelo.addRow(dat);
        }

    }//GEN-LAST:event_txtbuscarKeyPressed

    private void txtmontorecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmontorecActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmontorecActionPerformed

    private void btncancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelarActionPerformed
        // TODO add your handling code here:

        DefaultTableModel modelo2 = (DefaultTableModel) jTable1.getModel();
        modelo2.setRowCount(0);
        
        this.dispose();
    }//GEN-LAST:event_btncancelarActionPerformed

    private void jT_catMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jT_catMousePressed
        TreePath Path = jT_cat.getPathForLocation(evt.getX(), evt.getY());
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) Path.getLastPathComponent();
        //if(node.isLeaf()){

        if (node != null) {
            if (!node.toString().equals("Categorias")) {
                txttipoespectaculo.setText(node.toString());
            }
        } else {
            txttipoespectaculo.setText(null);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jT_catMousePressed
    
    public boolean controlardatos() {
        
        boolean existp = false;
        List<String> propss = ICP.listartodasPropuestas("");
        Iterator ite = propss.iterator();
        while (ite.hasNext()) {
            String stp = (String) ite.next();
            if (stp.contentEquals(txttitulo1.getText())) {
                existp = true;
            }
        }
        if (existp == true) {
            JOptionPane.showMessageDialog(null, "Ya existe una propuesta con este titulo");
            txttitulo1.selectAll();
            txttitulo1.requestFocus();
            return false;
        }
        
        String re = "";
        
        if (cbentradas.isSelected() && !cbporcentaje.isSelected()) {
            re = cbentradas.getText();
        } else if (cbentradas.isSelected() && cbporcentaje.isSelected()) {
            re = cbentradas.getText() + "/" + cbporcentaje.getText();
        } else if (!cbentradas.isSelected() && cbporcentaje.isSelected()) {
            re = cbporcentaje.getText();
        }
        
        if (this.txtproponente1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Proponente vacio");
            txtproponente1.selectAll();
            txtproponente1.requestFocus();
            return false;
        }
        if (this.txttipoespectaculo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Categoria vacia");
            txttipoespectaculo.selectAll();
            txttipoespectaculo.requestFocus();
            return false;
        }
        if (this.txttitulo1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Titulo vacio");
            txttitulo1.selectAll();
            txttitulo1.requestFocus();
            return false;
        }
        if (this.txtlugar.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Lugar vacio");
            txtlugar.selectAll();
            txtlugar.requestFocus();
            return false;
        }
        if (this.txtcostoentrada.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Costo de entrada vacio");
            txtcostoentrada.selectAll();
            txtcostoentrada.requestFocus();
            return false;
        }
        if (isNumeric(this.txtcostoentrada.getText()) == false) {
            JOptionPane.showMessageDialog(null, "Costo de entrada no numerico");
            txtmontorec.selectAll();
            txtmontorec.requestFocus();
            return false;
        }
        if (this.txtcostoentrada.getText().contains(",") || this.txtcostoentrada.getText().contains(".") || this.txtcostoentrada.getText().contains(" ")) {
            JOptionPane.showMessageDialog(null, "Costo de entrada no numerico");
            txtmontorec.selectAll();
            txtmontorec.requestFocus();
            return false;
        }
        if (this.txtmontorec.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Monto requerido vacio");
            txtmontorec.selectAll();
            txtmontorec.requestFocus();
            return false;
        }
        if (this.txtmontorec.getText().contains(",") || this.txtmontorec.getText().contains(".") || this.txtmontorec.getText().contains(" ")) {
            JOptionPane.showMessageDialog(null, "Monto requerido no numerico");
            txtmontorec.selectAll();
            txtmontorec.requestFocus();
            return false;
        }
        if (isNumeric(this.txtmontorec.getText()) == false) {
            JOptionPane.showMessageDialog(null, "Monto requerido no numerico");
            txtmontorec.selectAll();
            txtmontorec.requestFocus();
            return false;
        }
        
        if (re.equals("")) {
            JOptionPane.showMessageDialog(null, "Retorno incorrecto");
            cbporcentaje.requestFocus();
            return false;
        } else {
            return true;
        }
        
    }
    
    private void selecImagen() {
        FileNameExtensionFilter filtroImagen = new FileNameExtensionFilter("JPG, PNG & GIF", "jpg", "png", "gif");
        navegadorArchivos.setFileFilter(filtroImagen);
        navegadorArchivos.showOpenDialog(this);
        File imagen = navegadorArchivos.getSelectedFile();
        String path = navegadorArchivos.getSelectedFile().getPath();
        labelimage.setIcon(new ImageIcon(path));
        ImageIcon icon = new ImageIcon(path);
        Image foto = icon.getImage();
        Image nuevaFoto = foto.getScaledInstance(labelimage.getWidth(), labelimage.getHeight(), Image.SCALE_DEFAULT);
        ImageIcon nuevoIcono = new ImageIcon(nuevaFoto);
        labelimage.setIcon(nuevoIcono);
        //BufferedImage img= nuevoIcono;
        salvarImagen(nuevaFoto);
    }
    
    private void salvarImagen(Image imagen) {
        BufferedImage img = (BufferedImage) imagen;
        File outputfile = new File(ICP.getImagenDestino() + txttitulo1.getText() + ".png");
        imagenRuta = txttitulo1.getText() + ".png";
        try {
            ImageIO.write(img, "png", outputfile);
        } catch (IOException ex) {
            System.err.println(ex.getMessage());
        }
    }
    
    public void limpiartodo(JPanel panel) {
        for (int i = 0; panel.getComponents().length > i; i++) {
            if (panel.getComponents()[i] instanceof JTextField) {
                ((JTextField) panel.getComponents()[i]).setText("");
            }
        }
    }
    
    private boolean altaProp() {
        
        if (controlardatos()) {
            
            String re = null;
            dtFecha dtfrealizar = null, dtfpublicada = null;
            dtfpublicada = (dtFecha) util.getFecha();
            dtfrealizar = (dtFecha) getFechajdc();
            
            if (cbentradas.isSelected() && !cbporcentaje.isSelected()) {
                re = cbentradas.getText();
            } else if (cbentradas.isSelected() && cbporcentaje.isSelected()) {
                re = cbentradas.getText() + "/" + cbporcentaje.getText();
            } else if (!cbentradas.isSelected() && cbporcentaje.isSelected()) {
                re = cbporcentaje.getText();
            }
            
            dtPropuesta dtp = new dtPropuesta(txttitulo1.getText(), txtdescripcion.getText(), imagenRuta, txtlugar.getText(), "Ingresada", txttipoespectaculo.getText(), txtproponente1.getText(), dtfrealizar, dtfpublicada, Integer.parseInt(txtcostoentrada.getText()), Integer.parseInt(txtmontorec.getText()), 0, re);
            ICP.datosPropuesta(dtp);
            
            JOptionPane.showMessageDialog(null, "Propuesta agregada con exito");
            sacarlabasura();
        } else {
            JOptionPane.showMessageDialog(null, "Controle los datos");
        }
        
        return true;
    }
    
    private dtFecha getFechajdc() {
        dtFecha fecha;
        fecha = new dtFecha(Integer.toString(jdc_fecha.getCalendar().get(Calendar.DAY_OF_WEEK)), Integer.toString(jdc_fecha.getCalendar().get(Calendar.MONTH) + 1), Integer.toString(jdc_fecha.getCalendar().get(Calendar.YEAR)));
        return fecha;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncancelar;
    private javax.swing.JButton btndardealta;
    private javax.swing.JButton btnexplorar;
    private javax.swing.JCheckBox cbentradas;
    private javax.swing.JCheckBox cbporcentaje;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTree jT_cat;
    private javax.swing.JTable jTable1;
    private com.toedter.calendar.JDateChooser jdc_fecha;
    private javax.swing.JLabel labelimage;
    private javax.swing.JTextField txtbuscar;
    private javax.swing.JTextField txtcostoentrada;
    private javax.swing.JTextArea txtdescripcion;
    private javax.swing.JTextField txtlugar;
    private javax.swing.JTextField txtmontorec;
    private javax.swing.JTextField txtproponente1;
    private javax.swing.JTextField txttipoespectaculo;
    private javax.swing.JTextField txttitulo1;
    // End of variables declaration//GEN-END:variables

    private static boolean isNumeric(String cadena) {
        try {
            Integer.parseInt(cadena);
            return true;
        } catch (NumberFormatException nfe) {
            return false;
        }
    }
    
    private void sacarlabasura() {
        txtproponente1.setText("");
        txttipoespectaculo.setText("");
        txttitulo1.setText("");
        txtdescripcion.setText("");
        txtlugar.setText("");
        txtmontorec.setText("");
        txtcostoentrada.setText("");
        cbporcentaje.setSelected(false);
        cbentradas.setSelected(false);
        jT_cat.setModel(ICP.modeloJT3Categorias());
        jdc_fecha.setCalendar(null);

    }
//////////Categorias jtree -jp

}
