/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Logica.ContPropuesta;
import Logica.ContUsuario;
import Logica.dtContieneArray;
import Logica.dtPropuesta;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nicolasgutierrez
 */
public class Consulta_de_Propuesta_por_Estado extends javax.swing.JInternalFrame {

    ContUsuario contUsu = ContUsuario.getInstance();
    ContPropuesta contProp = ContPropuesta.getInstance();
    ArrayList<dtContieneArray> arregloContiene = new ArrayList<>();
    ArrayList<dtPropuesta> contienProp = new ArrayList<>();
    Vector datos = new Vector();

    /**
     * Creates new form Consulta_de_Propuesta_por_Estado
     */
    public Consulta_de_Propuesta_por_Estado() {
        initComponents();
        contProp.propAutomaticas();
        cargaEstados();
        this.setSize(900, 600);
        jLabel1.setText("Estados");
        jLabel6.setText("Propuestas en estado");
        jLabel2.setText("Imagen");
        lableEstadk.setText("Estado");
        txtmontotoal.setEditable(false);
        jLabel5.setText("Monto total");
        jLabel4.setText("Colaboradores");
        jButton1.setText("Cancelar");
        datos.add("Titulo");
        datos.add("Descripcion");
        datos.add("Lugar");
        datos.add("Fecha");
        datos.add("Precio Entrada");
        datos.add("Monto requerido");
        txtmontotoal.setText("0");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablepropuesta = new javax.swing.JTable();
        lableEstadk = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtmontotoal = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtimagen = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableestados = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablacolaboradores = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();

        jLabel1.setText("Estado");

        tablepropuesta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Titulo", "Descripcion", "Lugar", "Fecha", "Precio entrada", "Monto requerido"
            }
        ));
        tablepropuesta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablepropuestaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablepropuesta);

        lableEstadk.setText("Estado");

        jLabel6.setText("Propuestas");

        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Monto total");

        txtimagen.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 51, 0)));

        jLabel2.setText("Imagen");

        tableestados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Nombre"
            }
        ));
        tableestados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableestadosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tableestados);

        tablacolaboradores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Nickname"
            }
        ));
        jScrollPane3.setViewportView(tablacolaboradores);

        jLabel4.setText("Colaboradores");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(lableEstadk, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 827, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(541, 541, 541)
                .addComponent(jLabel4))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtimagen, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtmontotoal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(770, 770, 770)
                .addComponent(jButton1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(lableEstadk))
                .addGap(5, 5, 5)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4)))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(155, 155, 155)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtimagen, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(txtmontotoal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(90, 90, 90)
                .addComponent(jButton1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tableestadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableestadosMouseClicked
        // TODO add your handling code here:
        int row = tableestados.rowAtPoint(evt.getPoint());
        int col = tableestados.columnAtPoint(evt.getPoint());
        System.out.println("fila" + row);
        System.out.println("columna" + col);
        llenaGrillaPorEstado((String) tableestados.getValueAt(row, 0));
        txtmontotoal.setText("0");
        lableEstadk.setText((String) tableestados.getValueAt(row, 0));

    }//GEN-LAST:event_tableestadosMouseClicked

    private void tablepropuestaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablepropuestaMouseClicked
        int row = tablepropuesta.rowAtPoint(evt.getPoint());
        int col = tablepropuesta.columnAtPoint(evt.getPoint());
        cargaColaboradores((String) tablepropuesta.getValueAt(row, 0));
        cargaMonto((String) tablepropuesta.getValueAt(row, 0));
        // TODO add your handling code here:
    }//GEN-LAST:event_tablepropuestaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lableEstadk;
    private javax.swing.JTable tablacolaboradores;
    private javax.swing.JTable tableestados;
    private javax.swing.JTable tablepropuesta;
    private javax.swing.JLabel txtimagen;
    private javax.swing.JTextField txtmontotoal;
    // End of variables declaration//GEN-END:variables

    /**
     *
     * funcion que recibe un vector con el nombre de la cabecera un arreglo de
     * string y un jtable
     */
    private void llegaGrillaString(Vector v, ArrayList<String> e, JTable jt) {
        DefaultTableModel modelo;

        modelo = new DefaultTableModel(v, e.size());
        for (int i = 0; i < e.size(); i++) {
            String es = (String) e.get(i);
            modelo.setValueAt(es, i, 0);
            //modelo.setValueAt(p.getNickproponente(), i, 1);
        }
        jt.setModel(modelo);
    }

    private void cargaEstados() {
        ArrayList<String> estado = (ArrayList<String>) contProp.getEstadosString();
        estado.remove("Desactivada");
        Vector v = new Vector();
        v.add("Estado");
        llegaGrillaString(v, estado, tableestados);
        arregloContiene = (ArrayList<dtContieneArray>) crearArreglos(estado);
    }

    private ArrayList<dtContieneArray> crearArreglos(ArrayList<String> estado) {
        ArrayList<dtContieneArray> nuevoArreglo = new ArrayList<>();
        for (int i = 0; i < estado.size(); i++) {
            nuevoArreglo.add((dtContieneArray) getArrayProp((String) estado.get(i)));
        }
        return nuevoArreglo;
    }

    private dtContieneArray getArrayProp(String estado) {

        dtContieneArray contiene = new dtContieneArray((ArrayList<dtPropuesta>) contProp.getPropuestasxEstado(estado), estado);

        return contiene;
    }

    private void llenaGrillaPorEstado(String estado) {
        DefaultTableModel modelo = null;
        int cont = 0;
        for (int i = 0; i < arregloContiene.size(); i++) {
            dtContieneArray dtcA = arregloContiene.get(i);
            if (dtcA.getNombreArray().equals(estado)) {
                modelo = new DefaultTableModel(datos, dtcA.getMyArreglo().size());
                armarModelo(modelo, dtcA);
            }
        }

        tablepropuesta.setModel(modelo);
        DefaultTableModel model = (DefaultTableModel) tablacolaboradores.getModel();
        model.setRowCount(0);
        tablacolaboradores.setModel(model);
    }

    private void armarModelo(DefaultTableModel modelo, dtContieneArray dtC) {
        ArrayList<dtPropuesta> arregloProp = (ArrayList<dtPropuesta>) dtC.getMyArreglo();
        dtPropuesta prop;
        for (int i = 0; i < arregloProp.size(); i++) {
            prop = (dtPropuesta) arregloProp.get(i);
            modelo.setValueAt(prop.getTitulo(), i, 0);
            modelo.setValueAt(prop.getDescripcion(), i, 1);
            modelo.setValueAt(prop.getLugar(), i, 2);
            modelo.setValueAt(prop.getFechaRealizacion().getFecha(), i, 3);
            modelo.setValueAt(prop.getPrecioentrada(), i, 4);
            modelo.setValueAt(prop.getMontorequerido(), i, 5);

        }
    }

    private void cargaColaboradores(String propTitulo) {
        ArrayList<String> cola = null;
        cola = (ArrayList<String>) contProp.getColaboradoresString(propTitulo);
        llenaGrillaCola(cola);
    }

    private void llenaGrillaCola(ArrayList<String> cola) {
        Vector v = new Vector();
        v.add("Colaboradores");
        DefaultTableModel modelo = new DefaultTableModel(v, cola.size());
        for (int i = 0; i < cola.size(); i++) {
            modelo.setValueAt((String) cola.get(i), i, 0);
        }
        tablacolaboradores.setModel(modelo);
    }

    private void cargaMonto(String p) {
        int m = (Integer) contUsu.getMontoColaborado(p);
        txtmontotoal.setText(Integer.toString(m));
    }
}
